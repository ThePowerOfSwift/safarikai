// Generated by CoffeeScript 1.6.3
(function() {
  (function(doc, window) {
    var clientX, clientY, getPopup, hidePopup, injectPopup, messageEventHandler, mouseEventHandler, popupTagId, showResult;
    clientX = 0;
    clientY = 0;
    popupTagId = "safarikai-popup";
    mouseEventHandler = function(e) {
      var range, sel, word;
      clientX = e.clientX;
      clientY = e.clientY;
      range = doc.caretRangeFromPoint(e.clientX, e.clientY);
      if (range) {
        range.expand("word");
        sel = doc.defaultView.getSelection();
        word = range.toString().trim();
        return safari.self.tab.dispatchMessage("lookupWord", word);
      }
    };
    doc.onmousemove = doc.onmouseover = doc.onmouseout = mouseEventHandler;
    getPopup = function() {
      return doc.getElementById(popupTagId);
    };
    injectPopup = function() {
      var popup;
      if (getPopup()) {
        return;
      }
      popup = doc.createElement("div");
      popup.id = "safarikai-popup";
      return doc.body.appendChild(popup);
    };
    hidePopup = function() {
      return getPopup().style.display = "none";
    };
    showResult = function(word, result) {
      var left, margin, overflowX, popup, top;
      injectPopup();
      popup = getPopup();
      popup.style.display = "block";
      popup.innerHTML = result;
      if (result === "") {
        return hidePopup();
      } else {
        margin = 30;
        left = clientX + scrollX;
        overflowX = clientX + popup.offsetWidth - window.innerWidth + margin;
        if (overflowX > 0) {
          left -= overflowX;
        }
        popup.style.left = left + "px";
        top = clientY + scrollY + margin;
        if (clientY > window.innerHeight / 2) {
          top = clientY + scrollY - popup.offsetHeight - margin;
        }
        return popup.style.top = top + "px";
      }
    };
    messageEventHandler = function(e) {
      var messageData, messageName;
      messageName = e.name;
      messageData = e.message;
      switch (messageName) {
        case "showResult":
          return showResult(messageData.word, messageData.result);
      }
    };
    return safari.self.addEventListener("message", messageEventHandler, false);
  })(document, window);

}).call(this);
